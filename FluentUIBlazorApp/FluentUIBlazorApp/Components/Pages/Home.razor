@page "/"

<PageTitle>Home</PageTitle>

<FluentDesignTheme @bind-Mode="@Mode"
                   @bind-OfficeColor="@Color"
                   StorageName="theme" />

<FluentSelect Label="Theme"
              Items="@(Enum.GetValues<DesignThemeModes>())"
              @bind-SelectedOption="@Mode" />

<FluentSelect Label="Color"
              Items="@(Enum.GetValues<OfficeColor>().Select(i => (OfficeColor?)i))"
              @bind-SelectedOption="@Color" />

<FluentStack HorizontalGap="10">
    <FluentButton>Button</FluentButton>
    <FluentButton Appearance="Appearance.Accent">Accent</FluentButton>
    <FluentButton Appearance="Appearance.Lightweight">Lightweight</FluentButton>
    <FluentButton Appearance="Appearance.Outline">Outline</FluentButton>
    <FluentButton Appearance="Appearance.Stealth">Stealth</FluentButton>
    <FluentButton BackgroundColor="var(--highlight-bg)" Color="var(--info)">Colored</FluentButton>
    <FluentButton Loading="@loading" OnClick="@StartLoadingAsync" Appearance="Appearance.Accent">Loading</FluentButton>
</FluentStack>

@code {

    bool loading = false;

    async Task StartLoadingAsync()
    {
        loading = true;
        var loadingTask = Task.Run(() =>
        {
            // Simulate some loading work
            Task.Delay(2000).Wait(); // Simulate a task that takes 1 second
            loading = false;
        });

        var timeout = Task.Delay(2000); // 2 seconds timeout
        var completedTask = await Task.WhenAny(loadingTask, timeout);

    }
}


@code
{
    public DesignThemeModes Mode { get; set; }



    public OfficeColor? Color { get; set; }

    void OnLoaded(LoadedEventArgs e)
    {
        Console.WriteLine($"Loaded: {(e.Mode == DesignThemeModes.System ? "System" : "")} {(e.IsDark ? "Dark" : "Light")}");
    }

    void OnLuminanceChanged(LuminanceChangedEventArgs e)
    {
        Console.WriteLine($"Changed: {(e.Mode == DesignThemeModes.System ? "System" : "")} {(e.IsDark ? "Dark" : "Light")}");
    }

    void PickRandomColor()
    {
        Color = OfficeColorUtilities.GetRandom();
    }
}